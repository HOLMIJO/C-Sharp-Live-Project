@model TheatreCMS3.Areas.Prod.Models.ProductionMember

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="ProductionMember-Create--Header">Edit the Production Member</h2>


@using (Html.BeginForm("Edit", "ProductionMembers", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal ProductionMember-Create--Container">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProductionMemberId)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control ProductionMember-Create--InputField" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.YearJoined, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.YearJoined, new { htmlAttributes = new { @class = "form-control ProductionMember-Create--InputField" } })
            @Html.ValidationMessageFor(model => model.YearJoined, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MainRole, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.MainRole, htmlAttributes: new { @class = "form-control ProductionMember-Create--InputField" })
            @Html.ValidationMessageFor(model => model.MainRole, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Bio, new { htmlAttributes = new { @class = "form-control ProductionMember-Create--InputField" } })
            @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="file" class="custom-control-label col-md-2">Photo</label>
        <div class="col-md-10">
            <input type="file" name="file" id="file" />
        </div>
    </div>
        @if (Model.Photo != null)
        {
        <div class="form-group">
            <label for="file" class="custom-control-label col-md-2">Photo</label>
            <div class="col-md-10">
                <img src="data:photo;base64,@System.Convert.ToBase64String(Model.Photo)" width="120" height="120" />
            </div>
        </div>
        }

    <div class="form-group">
        @Html.LabelFor(model => model.CurrentMember, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.CurrentMember)
                @Html.ValidationMessageFor(model => model.CurrentMember, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Character, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Character, new { htmlAttributes = new { @class = "form-control ProductionMember-Create--InputField" } })
            @Html.ValidationMessageFor(model => model.Character, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CastYearLeft, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CastYearLeft, new { htmlAttributes = new { @class = "form-control ProductionMember-Create--InputField" } })
            @Html.ValidationMessageFor(model => model.CastYearLeft, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DebutYearLeft, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DebutYearLeft, new { htmlAttributes = new { @class = "form-control ProductionMember-Create--InputField" } })
            @Html.ValidationMessageFor(model => model.DebutYearLeft, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-block ProductionMembers-Create--buttons" />
            <button class="btn btn-block ProductionMembers-Create--buttons" onclick="returnToIndex()" id="ProductionMember-Create-Button">Return To List</button>
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
